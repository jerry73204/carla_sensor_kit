<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="vehicle_id" default="{{ vehicle.role_name | default('default') }}"/>
  <arg name="image_transport" default="compressed"/>
  
  <group>
    <push-ros-namespace namespace="camera"/>
    
{%- if 'camera' in sensors %}
{%- for camera in sensors.camera %}
    <!-- Camera: {{ camera.name }} -->
    <group>
      <push-ros-namespace namespace="{{ camera.name.replace('camera_', '') }}"/>
      
      <!-- Camera driver (CARLA bridge publishes these topics) -->
      <group if="$(var launch_driver)">
        <!-- Topic remapping from CARLA to Autoware camera topics -->
        <node pkg="topic_tools" exec="relay" name="{{ camera.name }}_image_relay" output="log">
          <param name="input_topic" value="/carla/$(var vehicle_id)/{{ camera.name }}/image"/>
          <param name="output_topic" value="image_raw"/>
          <param name="type" value="sensor_msgs/msg/Image"/>
          <param name="reliability" value="best_effort"/>
        </node>
        
        <node pkg="topic_tools" exec="relay" name="{{ camera.name }}_info_relay" output="log">
          <param name="input_topic" value="/carla/$(var vehicle_id)/{{ camera.name }}/camera_info"/>
          <param name="output_topic" value="camera_info"/>
          <param name="type" value="sensor_msgs/msg/CameraInfo"/>
          <param name="reliability" value="best_effort"/>
        </node>
      </group>
      
      <!-- Image transport for compression -->
      <group if="$(eval &quot;'$(var image_transport)' == 'compressed'&quot;)">
        <node pkg="image_transport" exec="republish" name="{{ camera.name }}_compress" output="log">
          <param name="in_transport" value="raw"/>
          <param name="out_transport" value="compressed"/>
          <remap from="in" to="image_raw"/>
          <remap from="out" to="image_raw"/>
          <param name="compressed/quality" value="90"/>
          <param name="compressed/png_level" value="3"/>
        </node>
      </group>
      
      <!-- Camera info publisher with calibration -->
      <node pkg="camera_info_manager" exec="camera_info_manager" name="{{ camera.name }}_info_manager" if="$(var launch_driver)">
        <param name="camera_name" value="{{ camera.name }}"/>
        <param name="camera_info_url" value="file://$(find-pkg-share {{ sensor_kit_name }}_description)/calibration/{{ camera.name }}_calibration.yaml"/>
        <param name="frame_id" value="{{ camera.frame_id }}"/>
        <param name="image_width" value="{{ camera.image_size_x | default(1920) }}"/>
        <param name="image_height" value="{{ camera.image_size_y | default(1080) }}"/>
      </node>
    </group>
    
{%- endfor %}

    <!-- Special handling for traffic light camera -->
{%- set ns = namespace(traffic_light_camera=none) %}
{%- for cam in sensors.camera if not ns.traffic_light_camera %}
{%-   if 'traffic' in cam.name or 'front' in cam.name %}
{%-     set ns.traffic_light_camera = cam %}
{%-   endif %}
{%- endfor %}
{%- if not ns.traffic_light_camera and sensors.camera %}
{%-   set ns.traffic_light_camera = sensors.camera[0] %}
{%- endif %}
{%- if ns.traffic_light_camera %}
    <group>
      <push-ros-namespace namespace="traffic_light"/>
      
      <!-- Relay from designated traffic light camera -->
      <node pkg="topic_tools" exec="relay" name="tl_camera_info_relay" output="log">
        <param name="input_topic" value="/camera/{{ ns.traffic_light_camera.name.replace('camera_', '') }}/camera_info"/>
        <param name="output_topic" value="camera_info"/>
        <param name="type" value="sensor_msgs/msg/CameraInfo"/>
        <param name="reliability" value="best_effort"/>
      </node>
      
      <node pkg="topic_tools" exec="relay" name="tl_compressed_image_relay" output="log">
        <param name="input_topic" value="/camera/{{ ns.traffic_light_camera.name.replace('camera_', '') }}/image_raw/compressed"/>
        <param name="output_topic" value="image_raw/compressed"/>
        <param name="type" value="sensor_msgs/msg/CompressedImage"/>
        <param name="reliability" value="best_effort"/>
      </node>
    </group>
{%- endif %}
{%- endif %}
  </group>
</launch>