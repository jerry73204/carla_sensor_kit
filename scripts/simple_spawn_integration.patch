--- simple_spawn.py.orig	2024-01-01 00:00:00.000000000 +0000
+++ simple_spawn.py	2024-01-01 00:00:00.000000000 +0000
@@ -1,5 +1,11 @@
 #!/usr/bin/env python3
 
+import sys
+from pathlib import Path
+
+# Add path for sensor_config_loader import
+sys.path.insert(0, "/home/aeon/repos/carla_sensor_kit_launch/scripts")
+from sensor_config_loader import SensorConfigLoader
 from simulation.sensors import Lidar, SemanticLidar, Gnss, Imu, RgbCamera
 from traffic_light import TrafficLightHelper
 from global_route_planner import GlobalRoutePlanner
@@ -20,6 +26,10 @@
     world = client.get_world()
     # ... existing code ...
     
+    # Create sensor configuration loader
+    config_loader = SensorConfigLoader()
+    print("Loaded sensor configurations from YAML files")
+    
     # ... existing vehicle spawn code ...
     
     # Create sensors
@@ -30,11 +40,26 @@
         'traffic_light': RgbCamera('traffic_light')
     }
     
-    # Spawn sensors (original code)
+    # Spawn sensors with transforms from YAML configuration
     for sensor_name, sensor in sensors.items():
-        sensor_actor = sensor.spawn(world, vehicle)
+        # Get transform from config based on sensor type
+        if sensor_name == 'ublox':
+            trans = config_loader.get_gnss_transform()
+        elif sensor_name == 'tamagawa':
+            trans = config_loader.get_imu_transform()
+        elif sensor_name == 'top':
+            trans = config_loader.get_lidar_transform('top')
+        elif sensor_name == 'traffic_light':
+            trans = config_loader.get_camera_transform('traffic_light')
+        else:
+            trans = None
+        
+        # Spawn sensor with the loaded transform
+        sensor_actor = sensor.spawn(world, vehicle, trans)
         sensor.listen(sensor_queue)
         actor_dict[sensor_name] = sensor_actor
+        if trans:
+            print(f"Spawned {sensor_name} at Location({trans.location.x:.2f}, {trans.location.y:.2f}, {trans.location.z:.2f})")
     
     # ... rest of the code ...